# Copyright 2017 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ------------------------------------------------------------------------------

version: "2.1"

services:

  metal-supply-shell:
    build:
      context: .
      dockerfile: ./shell/Dockerfile
    image: metal-supply-shell
    container_name: metal-supply-shell
    volumes:
      - .:/project/metal-supply
    command: |
      bash -c "
        metal-supply-protogen
        tail -f /dev/null
      "
#      tail -f /dev/null

  metal-supply-tp:
    build:
      context: .
      dockerfile: ./processor/Dockerfile
    image: metal-supply-tp
    container_name: metal-supply-tp
    volumes:
      - '.:/project/metal-supply'
    depends_on:
      - metal-supply-shell
    command: |
      bash -c "
        sleep 1
        metal-supply-tp -v -C tcp://validator:4004
      "

  settings-tp:
    image: hyperledger/sawtooth-settings-tp:chime
    container_name: sawtooth-settings-tp
    depends_on:
      - validator
    entrypoint: settings-tp -vv -C tcp://validator:4004


  validator:
    image: hyperledger/sawtooth-validator:chime
    container_name: sawtooth-validator
    expose:
      - 4004
    ports:
      - "4004:4004"
    # start the validator with an empty genesis batch
    entrypoint: "bash -c \"\
          sawadm keygen && \
          sawtooth keygen my_key && \
          sawset genesis -k /root/.sawtooth/keys/my_key.priv && \
          sawset proposal create \
            -k /root/.sawtooth/keys/my_key.priv \
            sawtooth.consensus.algorithm.name=Devmode \
            sawtooth.consensus.algorithm.version=0.1 \
            -o config.batch && \
          sawadm genesis config-genesis.batch config.batch && \
          sawtooth-validator -vv \
            --endpoint tcp://validator:8800 \
            --bind component:tcp://eth0:4004 \
            --bind network:tcp://eth0:8800 \
            --bind consensus:tcp://eth0:5050 \
          \""

  devmode-engine:
    image: hyperledger/sawtooth-devmode-engine-rust:chime
    container_name: sawtooth-devmode-engine-rust-default
    depends_on:
      - validator
    entrypoint: devmode-engine-rust -C tcp://validator:5050

#  rest-api:
#    image: hyperledger/sawtooth-rest-api:chime
#    container_name: sawtooth-rest-api-default
#    ports:
#      - "8008:8008"
#    depends_on:
#      - validator
#    entrypoint: sawtooth-rest-api -C tcp://validator:4004 --bind rest-api:8008


  metal-supply-rest-api:
    build:
      context: .
      dockerfile: ./rest_api/Dockerfile
    image: metal-supply-rest-api
    container_name: metal-supply-rest-api
    volumes:
      - .:/project/metal-supply
    ports:
      - "8000:8000"
    depends_on:
      - metal-supply-shell
    command: |
      bash -c "
        metal-supply-rest-api -B metal-supply-rest-api:8000 -C validator:4004 --db-host postgres -vv
      "
  metal-supply-subscriber:
    build:
      context: .
      dockerfile: ./subscriber/Dockerfile
    image: metal-supply-subscriber
    container_name: metal-supply-subscriber
    volumes:
      - ".:/project/metal-supply"
    depends_on:
      - metal-supply-shell
      - postgres
    command: |
      bash -c "
        metal-supply-subscriber init --db-host postgres -vv
        sleep 3
        metal-supply-subscriber subscribe --db-host postgres -C tcp://validator:4004 -vv
      "

  postgres:
    image: postgres:alpine
    container_name: metal-supply-postgres
    restart: always
    environment:
      POSTGRES_USER: sawtooth
      POSTGRES_PASSWORD: sawtooth
      POSTGRES_DB: metal-supply
    ports:
      - "5432:5432"

  adminer:
    image: adminer
    container_name: metal-supply-adminer
    restart: always
    ports:
      - "8080:8080"
