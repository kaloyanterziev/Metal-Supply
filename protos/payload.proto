syntax = "proto3";
import "record.proto";

message MetalSupplyPayload{
    enum Action {
        CREATE_AGENT = 0;
        CREATE_RECORD = 1;
        UPDATE_RECORD = 2;
        TRANSFER_RECORD = 3;
    }

    // Whether the payload contains a create agent, create record,
    // update record, or transfer record action
    Action action = 1;

    // The transaction handler will read from just one of these fields
    // according to the action
    CreateAgentAction create_agent = 2;
    CreateRecordAction create_record = 3;
    UpdateRecordLocationAction update_record = 4;
    TransferRecordAction transfer_record = 5;

    // Approximately when transaction was submitted, as a Unix UTC timestamp
    uint64 timestamp = 6;
}


message CreateAgentAction {
    // A human-readable name identifying the new agent
    string name = 1;
    int32 role = 2;
}


message CreateRecordAction {
    // Unique record id generated by the rest api
    string record_id = 1;

    // Coordinates are expected to be in millionths of a degree
    double latitude = 2;
    double longitude = 3;
}


message UpdateRecordLocationAction {
    // The id of the record being updated
    string record_id = 1;
    // Coordinates are expected to be in millionths of a degree
    sint64 latitude = 2;
    sint64 longitude = 3;
    string agent_id = 4;
}


message TransferRecordAction {
    // The id of the record for the ownership transfer
    string record_id = 1;

    // The public key of the agent to which the record will be transferred
    string receiving_agent = 2;

    double percentage = 3;
}